#!/usr/bin/env bash

set -oue pipefail

FAILED_COMPONENTS=()

log_failure () {
    echo "$COMPONENT upgrade failed" 
    FAILED_COMPONENTS+=( "$COMPONENT" )
}

draw_sep () {
    start=$( (printf "\u2500%.0s" $(seq 1 10) && printf " Updating %s " "$COMPONENT") | wc -c)
    start=$((start + 1))
    printf "\n" && printf "\u2500%.0s" $(seq 1 10) && printf " Updating %s " "$COMPONENT" && \
        printf "\u2500%.0s" $(seq $start 80) && printf "\n"
}

COMPONENT="bootc"
draw_sep
tsd upgrade ||
    log_failure

COMPONENT="flatpak"
draw_sep
(flatpak update -y &&
    flatpak uninstall --unused -y) ||
    log_failure

COMPONENT="podman"
draw_sep
/usr/libexec/pod-up ||
    log_failure

COMPONENT="fwupd"
draw_sep
(fwupdmgr -y refresh &&
    fwupdmgr -y get-updates &&
    fwupdmgr -y update) ||
    log_failure

if [[ "${FAILED_COMPONENTS[*]}" = "fwupd" ]]; then
    echo "Service has failed upgrading the components: ${FAILED_COMPONENTS[*]}"
    exit 0
elif [[ -n ${FAILED_COMPONENTS[*]} ]]; then
    echo "Service has failed upgrading the components: ${FAILED_COMPONENTS[*]}"
    exit 1   
else
    echo "All upgrades applied successfully"
    exit 0
fi
